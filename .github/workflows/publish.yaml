name: osm_flutter

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  publish:
    runs-on: ubuntu-latest
    container:
      image:  python:3
      #image:  google/dart:latest
    steps:
      - uses: actions/checkout@v3
      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
      - uses: dart-lang/setup-dart@v1
      - name: Install Flutter SDK
        uses: britannio/action-install-flutter@v1
      - run: dart --version
      - run: flutter --version
      - name: Setup credentials
        run: |
          mkdir -p ~/.pub-cache
          cat <<EOF > ~/.pub-cache/credentials.json
          {
            "accessToken":"${{ secrets.OAUTH_ACCESS_TOKEN }}",
            "refreshToken":"${{ secrets.OAUTH_REFRESH_TOKEN }}",
            "tokenEndpoint":"https://accounts.google.com/o/oauth2/token",
            "scopes":["https://www.googleapis.com/auth/userinfo.email","openid"],
            "expiration": ${{ secrets.EXP }}
          }
          EOF
      - uses: actions/github-script@v6
        id: script
        timeout-minutes: 10
        with:
          debug: true
          script: |
            const token = process.env['ACTIONS_RUNTIME_TOKEN']
            const runtimeUrl = process.env['ACTIONS_ID_TOKEN_REQUEST_URL']
            core.setOutput('TOKEN', token.trim())
            core.setOutput('IDTOKENURL', runtimeUrl.trim())
      - name: Get Id Token
        run: |
          IDTOKEN=$(curl -H "Authorization: bearer  ${{steps.script.outputs.TOKEN}}" ${{steps.script.outputs.IDTOKENURL}}  -H "Accept: application/json; api-version=2.0" -H "Content-Type: application/json" -d "https://pub.dev" | jq -r '.value')
          echo $IDTOKEN
          jwtd() {
              if [[ -x $(command -v jq) ]]; then
                  jq -R 'split(".") | .[0],.[1] | @base64d | fromjson' <<< "${1}"
                  echo "Signature: $(echo "${1}" | awk -F'.' '{print $3}')"
              fi
          }
          jwtd $IDTOKEN
          echo "PUB_TOKEN=${IDTOKEN}"
        id: tokenid
      - name: preparation release
        run: python check_pubspec_release.py
      - name: clear before release
        run: |
          rm -f *.gif
          rm -rf assets
          rm -rf flutter_osm_interface
          rm -rf flutter_osm_web
          rm -f check_pubspec_release.py
      - name: fomarting files
        run : dart format .
      - name: Publish package
        run:  flutter pub publish -f